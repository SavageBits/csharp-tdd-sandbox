using System;
using System.Collections.Generic;
using EvenFibonacciNumbers.Logic;
using NUnit.Framework;

//https://projecteuler.net/problem=2

//Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
//By starting with 1 and 2, the first 10 terms will be:

//1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

//By considering the terms in the Fibonacci sequence whose values do not exceed four 
//million, find the sum of the even-valued terms.


namespace EvenFibonacciNumbers.Tests
{
    [TestFixture]
    public class EvenFibSequenceSummerTest
    {

        [Test]
        public void ShouldGenerateAFibonacciSequenceForGivenMaximum()
        {
            Assert.AreEqual(new List<int>{ 1, 2, 3, 5, 8, 13 }, new EvenFibSequenceSummer().GetFibonacciSequence(14));
        }

        //would never name a test this way IRL :)
        [Test]
        public void ShouldGenerateAFibonacciSequenceForGivenMaximumRecursively()
        {
            List<int> sequence = new List<int>();

            new EvenFibSequenceSummer().GetFibonacciSequenceRecursive(14, ref sequence);

            Assert.AreEqual(new List<int> { 1, 2, 3, 5, 8, 13 }, sequence);
        }

        //1, 2, 3, 5, 8, 13, 21, 34, 55, 89 - 100
        //2 + 8 + 34 = 44
        [Test]
        public void ShouldSumEvenNumbersForGivenFibonacciSequence()
        {
            Assert.AreEqual(44, new EvenFibSequenceSummer().GetEvenFibSequenceSum(100));
        }
    }
}
